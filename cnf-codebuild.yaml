AWSTemplateFormatVersion: "2010-09-09"
Description: Backup terraform.state to s3
Parameters:
  SourceBucketName:
    Description: Enter Source bucket name which stores terraform state
    Type: String
  DestinationBucketName:
    Description: Enter Destination bucket name which stores backup
    Type: String
  Region:
    Description: Enter AWS Region
    Type: String
    Default: us-east-1
  DynamodbTableName:
    Description: Enter DynamoDb Table Name which locks terraform state
    Type: String
    Default: terraform_state
  SourceGihubRepoUrl:
    Description: Enter Github Repo url that contains build script and build files
    Type: String
    Default: https://github.com/anandshivam44/build
Resources:
  CodeBuildServiceRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Action:
              - sts:AssumeRole
            Principal:
              Service:
                - codebuild.amazonaws.com
  CodeBuildServicePolicy:
    Type: AWS::IAM::Policy
    Properties:
      PolicyName: CodeBuildServicePolicy
      Roles:
        - !Ref CodeBuildServiceRole
      PolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Action:
              - logs:CreateLogGroup
              - logs:CreateLogStream
              - logs:PutLogEvents
            Resource: "arn:aws:logs:*:*:*"
          - Effect: Allow
            Action:
              - s3:GetObject
              - s3:GetObjectVersion
              - s3:PutObject
            Resource:
              - !Sub "arn:aws:s3:::${DestinationBucketName}"

  TerraformStateBackup:
    Type: AWS::CodeBuild::Project
    Properties:
      Name: TerraformStateBackup
      Description: Backup terraform.state to s3
      ServiceRole: !GetAtt CodeBuildServiceRole.Arn
      Artifacts:
        Type: no_artifacts
      Environment:
        Type: LINUX_CONTAINER
        ComputeType: BUILD_GENERAL1_SMALL
        Image: aws/codebuild/standard:4.0
        EnvironmentVariables:
          - Name: SOURCE_BUCKET_NAME
            Value: !Ref SourceBucketName
          - Name: TARGET_BUCKET_NAME
            Value: !Ref DestinationBucketName
          - Name: REGION
            Value: !Ref Region
          - Name: STATE_LOCK_TABLE_NAME
            Value: !Ref DynamodbTableName
      Source:
        Location: !Ref SourceGihubRepoUrl
        Type: GITHUB
      TimeoutInMinutes: 10
  TriggerBuildRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
            Action: sts:AssumeRole
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
      Path: /
      Policies:
        - PolicyName: lambda-copier
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action:
                  - codebuild:StartBuild
                Resource:
                  - "arn:aws:codebuild:us-east-1:507799322916:project/TerraformStateBackup"
  CopyZipsFunction:
    Type: AWS::Lambda::Function
    Properties:
      Description: Start starts build for a code build project
      Handler: index.handler
      Runtime: python3.7
      Role: !GetAtt "TriggerBuildRole.Arn"
      Timeout: 240
      Code:
        ZipFile: |
          import boto3

          def handler(event, context):

              client = boto3.client("codebuild")
              response = client.start_build(projectName="TerraformStateBackup")
    
